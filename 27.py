import random
import string
("""По рзелульаттам илссеовадний одонго анлигйсокго унвиертисета, не иеемт занчнеия, в кокам пряокде рсапожолены бкувы в солве. 
Галвоне, чотбы преавя и пслоендяя бквуы блыи на мсете. 
Осатьлыне бкувы мгоут селдовтаь в плоонм бсепордяке, все-рвано ткест чтаитсея без побрелм. 
Пичрионй эгото ялвятеся то, что мы чиатем не кдаужю бкуву по отдльенотси, а все солво цликеом.

Напишите функцию, которая преобразует переданный ей текст способом, похожим на описанный выше. 
В качестве алгоритма перемешивания букв в слове используйте следующий:

Для каждого слова в тексте:
	1. Фиксируем первый и последний символы слова.
	2. Из оставшихся берём первые три символа, произвольно перемешиваем.
	3. Полученную тройку фиксируем, т.е. она уже не будет участвовать в дальнейшем перемешивании.
	4. Повторяем пункт 2, пока незафиксированные символы не кончатся.
	
	
def pemrtuate(text): # returns permuted text
""")


# text = """Для енота полоскуна наиболее пригодны смешанные леса со старыми дуплистыми деревьями и наличием водоёмов или болот.
#        Хвойных лесов, как и лесов, лишённых водоёмов, он избегает.
#        На юге ареала водится на морском побережье. Еноты легко приспосабливаются к антропогенному ландшафту,
#        селятся на окраинах полей, в садах, нередко в городах и пригородах.
#        Жилища енот устраивает в дуплах.
#        В крайнем случае использует наземные убежища — расщелины в скалах, норы барсуков; сам рыть норы не умеет.
#        Ведёт сумеречно-ночной образ жизни; дневные часы проводит в логове.
#        На промысел выходит с наступлением сумерек, обходя свой участок (радиусом до 1,5 км) в поисках пищи.
#        Енот редко удаляется более чем на 1,5 километра от своего жилища.
#        При этом участки отдельных особей часто перекрывают друг на друга, и, как результат,
#        плотность енота в угодьях может быть довольно высокой"""


def pemrtuate(text):
    text = "Для енота полоскуна наиболее пригодны смешанные леса со старыми дуплистыми деревьями и наличием водоёмов или болот."

    word_list = [str(word.strip(".,!&?*()@#$%^&?\/")) for word in text.split()]
    pemrtuate_text = []
    pemrtuate_str = ""
    for i in word_list:
        len_word = len(word_list[i])
        if len_word <= 3:
            continue
        else:
            for j in word_list[i]:



            if idx =
            if j == word_list[i][0]
                pemrtuate_str = pemrtuate_str + j
                idx += 1
            elif j == word_list[i][-1]
                pemrtuate_str = pemrtuate_str + j

            else:




